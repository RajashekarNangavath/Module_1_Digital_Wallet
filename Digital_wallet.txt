#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
bool procTrans(int sID, int rID, int amt, vector<pair<int, int>>& accs) {
    int sIdx = sID - 1;
    int rIdx = rID - 1;
    if (accs[sIdx].second >= amt) {
        accs[rIdx].second += amt;
        accs[sIdx].second -= amt;
        return true;
    }
    return false;
}
int main() {
    int n;
    cin >> n;
    vector<pair<int, int>> accs(n);
    for (int i = 0; i < n; ++i) {
        int uID, bal;
        cin >> uID >> bal;
        accs[i] = {uID, bal};
    }
    int t;
    cin >> t;
    vector<string> res;
    while (t--) {
        int sID, rID, amt;
        cin >> sID >> rID >> amt;
        bool success = procTrans(sID, rID, amt, accs);
        res.push_back(success ? "Success" : "Failure");
    }
    for (const auto& s : res) {
        cout << s << endl;
    }
    sort(accs.begin(), accs.end(), [](const auto& a, const auto& b) {
        return a.second < b.second;
    });
    cout << endl;
    for (const auto& a : accs) {
        cout << a.first << " " << a.second << endl;
    }
    return 0;
}
